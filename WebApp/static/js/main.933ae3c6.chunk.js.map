{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["currencies","App","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleStateChange","bind","assertThisInitialized","calculate","handleClearClick","handleApiEndpointEdit","cachedApiEndpoint","localStorage","getItem","state","principal","loanTerm","loanRate","currency","isLoading","apiEndpointEditMode","apiEndpoint","tableData","event","target","name","value","setState","defineProperty","setItem","prevState","validatePositiveInteger","isPositiveInteger","eventKey","x","isNaN","Number","_this$state","length","_this2","params","p","t","r","makeRequest","then","data","console","log","amortList","catch","queryString","keys","map","key","join","apiURL","fetch","response","json","table_headers","forEach","header","push","react_default","a","createElement","table_rows","cols","rowId","dataRow","cells","colData","Table","striped","bordered","_this3","Grid","Row","Col","sm","md","FormGroup","controlId","ControlLabel","InputGroup","FormControl","type","readOnly","onChange","Button","aria-label","onClick","Glyphicon","glyph","validationState","validatePrincipal","placeholder","DropdownButton","componentClass","id","title","onSelect","handleCurrencySelect","opt","i","MenuItem","active","validateLoanTerm","Addon","validateLoanRate","className","disabled","canBeSubmitted","block","renderTable","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.933ae3c6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { FormGroup, ControlLabel, FormControl, InputGroup } from 'react-bootstrap'\nimport { DropdownButton } from 'react-bootstrap'\nimport { MenuItem } from 'react-bootstrap'\nimport { Button } from 'react-bootstrap'\nimport { Glyphicon } from 'react-bootstrap'\nimport {Grid, Row, Col} from 'react-bootstrap'\nimport {Table} from 'react-bootstrap'\n\nconst currencies = [\"€\", \"£\", \"$\"];\n\nclass App extends Component {\n\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.handleStateChange = this.handleStateChange.bind(this);\n\t\tthis.calculate = this.calculate.bind(this);\n\t\tthis.handleClearClick = this.handleClearClick.bind(this);\n\t\tthis.handleApiEndpointEdit = this.handleApiEndpointEdit.bind(this);\n\t\t\n\t\tconst cachedApiEndpoint = localStorage.getItem(\"loanCalculatorApiEndpoint\");\n\t\tthis.state = {\n\t\t\t\tprincipal: '',\n\t\t\t\tloanTerm: '',\n\t\t\t\tloanRate: '',\n\t\t\t\tcurrency: currencies[1],\n\t\t\t\tisLoading: false,\n\t\t\t\tapiEndpointEditMode: false,\n\t\t\t\tapiEndpoint: (cachedApiEndpoint) ? cachedApiEndpoint : '',\n\t\t\t\ttableData: []\n\t\t};\n\n\t}\n\n\thandleStateChange(event) {\n\t\tconst target = event.target;\n\t\tconst name = target.name;\t\t\n\t\tconst value = target.value;\n\t\tthis.setState({\n\t\t  [name]: value\n\t\t});\n\t}\n\t\n\thandleApiEndpointEdit(event) {\n\t\t if (this.state.apiEndpointEditMode) {\n\t\t\t\tlocalStorage.setItem(\"loanCalculatorApiEndpoint\", this.state.apiEndpoint);\n\t\t }\n\t\t else { \n//\t\t\t this.apiEndPointTextInput.focus();\n\t\t }\n\t\tthis.setState(prevState => ({apiEndpointEditMode: !prevState.apiEndpointEditMode}))\n\t}\n\n\tvalidatePrincipal(value) {\n\t\treturn this.validatePositiveInteger(value);\n\t}\n\t\n\tvalidateLoanTerm(value) {\n\t\treturn this.validatePositiveInteger(value);\n\t}\n\n\tvalidateLoanRate(value) {\n\t\treturn null;\n\t}\n\t\n\tvalidatePositiveInteger(value) {\n\t\tif (value===null || value==='') { \n\t\t\treturn null; \n\t\t}\n\t\tif (this.isPositiveInteger(value)) {\n\t\t\treturn 'success';\n\t\t} else {\n\t\t\treturn 'error';\n\t\t}\n\t}\n\t\n  handleCurrencySelect(eventKey, event) {\n    this.setState({currency: currencies[eventKey]});\n  }\t\n\n  handleClearClick() {\n\t\tthis.setState( {\n\t\t\t\tprincipal: '',\n\t\t\t\tloanTerm: '',\n\t\t\t\tloanRate: '',\n\t\t\t\tcurrency: currencies[1],\n\t\t\t\tisLoading: false,\n\t\t\t\tapiEndpointEditMode: false,\n\t\t\t\tapiEndpoint: '',\n\t\t\t\ttableData: []\n\t\t});\n\t}\n  \n\tisPositiveInteger(x) {\n\t\tif (isNaN(x) || Number(x) <= 0 ) return false;\n\t\treturn true;\n\t}\n\t\n\tcanBeSubmitted() {\n\t\tconst { principal, loanTerm, apiEndpoint } = this.state;\n\t\treturn this.isPositiveInteger(principal) && this.isPositiveInteger(loanTerm) && apiEndpoint && apiEndpoint.length > 0;\n\t}\n\t\n\tcalculate() {\n\t\tconst params = {\n\t\t\tp : this.state.principal,\n\t\t\tt : this.state.loanTerm,\n\t\t\tr : this.state.loanRate\n\t\t}\n\n\t\tthis.setState({isLoading: true});\n\t\tthis.makeRequest(params).then(data => {\n\t\t\t\tconsole.log(\"Result fetched\")\n\t\t\t\tconsole.log(this.state);\n\t\t\t\tthis.setState({tableData: data.amortList});\n \t\t\t    this.setState({isLoading: false});\n\t\t\t\t})\n\t\t\t\t.catch(this.setState({isLoading: false}));\n\t}\n\n\tasync makeRequest (params) {\n\t\tvar queryString = Object.keys(params).map(key => key + '=' + params[key]).join('&');\n\t\tconst apiURL = this.state.apiEndpoint + '?' + queryString;\n\n\t\tconsole.log(\"Executing async/await based request\");\n\t\tconsole.log(apiURL);\n\t\tconst response = await fetch(apiURL);\n\n\t\treturn await response.json();\n\t}\n  \n  renderTable (tableData) {\n\t\tvar table_headers = [];\n\t\tvar headers = Object.keys(tableData[0]);\n\t\theaders.forEach(header => table_headers.push(<th key={header}>{header}</th>));\n\t\t\n\t\tvar table_rows = [];\n\t\tvar cols = Object.keys(tableData[0]);\n\t\tvar rowId = 0;\n\t\ttableData.map(dataRow => {\n\t\t\trowId++;\n\t\t\tvar cells = cols.map(colData => {\n\t\t\t\treturn <td key={colData + rowId}> {dataRow[colData]} </td>;\n\t\t\t});\n\t\t\treturn table_rows.push(<tr key={rowId}>{cells}</tr>)\n\t\t});\n\n\t  \treturn (\n\t\t<div>\n\t  \t  <Table striped bordered>\n\t  \t  \t<thead><tr>{table_headers}</tr></thead>\n\t  \t   <tbody>{table_rows}</tbody>\n\t\t</Table>\n\t\t</div>\n\t\t)\n  }\n\t  \n\trender() {\n\t\tconsole.log(\"rendering...\");\n\t\tconst { tableData } = this.state;\n\t\tconst isLoading = this.state.isLoading;\n\t\treturn (\n<Grid>\n\t<Row> \n\t  <Col sm={12}  md={4}>\n\t\t<div>\n\t\t\t\t  <FormGroup controlId=\"formApiEndpoint\"> \n\t\t\t\t     <ControlLabel>API Endpoint</ControlLabel>\n\t\t\t\t     <InputGroup>\n\t\t\t\t      \t<FormControl type=\"text\" readOnly={!this.state.apiEndpointEditMode} name=\"apiEndpoint\" value={this.state.apiEndpoint} onChange={this.handleStateChange}/>\n\t\t\t\t      \t<InputGroup.Button>\n\t\t\t\t      \t\t<Button \n\t\t\t\t\t\t\t\taria-label=\"Edit\"\n\t\t\t\t\t\t\t\tonClick={this.handleApiEndpointEdit}>\n\n\t\t\t\t\t\t\t\t<Glyphicon glyph={(this.state.apiEndpointEditMode)\n\t\t\t\t\t\t\t\t\t\t  ? \"glyphicon glyphicon-ok\" \n\t\t\t\t\t\t\t\t\t\t  : \"glyphicon glyphicon-pencil\" \n\t\t\t\t\t\t\t\t\t\t}/>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t      \t</InputGroup.Button>\n\t\t\t\t    </InputGroup>\n\t\t\t\t  </FormGroup>\n\t\t\n\t\t\n\t\t\t\t\t<FormGroup controlId=\"formPrincipal\" validationState={this.validatePrincipal(this.state.principal)}>\n\t\t\t\t\t    <ControlLabel>Loan Amount</ControlLabel>\n\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t  <FormControl\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter principal\"\n\t\t\t\t\t\t\t\tname=\"principal\"\n\t\t\t\t\t\t\t\tvalue={this.state.principal}\n\t\t\t\t\t\t\t\tonChange={this.handleStateChange}\n\t\t\t\t\t\t  />\n\t\t\t\t\t\t  <DropdownButton\n\t\t\t\t\t\t\tcomponentClass={InputGroup.Button}\n\t\t\t\t\t\t\tid=\"dropdown-addon-currency\"\n\t\t\t\t\t\t\ttitle={this.state.currency}\n\t\t\t\t\t\t\tonSelect={this.handleCurrencySelect.bind(this)}\n\t\t\t\t\t\t  >\n\t\t\t\t\t\t  {currencies.map((opt, i) => (\n\t\t\t\t\t\t\t  <MenuItem key={i} eventKey={i} active={this.state.currency===opt}>\n\t\t\t\t\t\t\t\t{opt}\n\t\t\t\t\t\t\t  </MenuItem>\n\t\t\t\t\t\t ))}\n\t\t\n\t\t\t\t\t\t  </DropdownButton>\n\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t  </FormGroup>\n\n\t\t\t\t\t  <FormGroup controlId=\"formLoanTerm\" validationState={this.validateLoanTerm(this.state.loanTerm)}>\n\t\t\t\t\t\t  <ControlLabel>Term</ControlLabel>\n\t\t\t\t\t\t  <InputGroup>\n\t\t\t\t\t\t\t  <FormControl\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"loanTerm\"\n\t\t\t\t\t\t\t\tvalue={this.state.loanTerm}\n\t\t\t\t\t\t\t\tplaceholder=\"Enter loan term\"\n\t\t\t\t\t\t\t\tonChange={this.handleStateChange}\n\t\t\t\t\t\t\t  />\n\t\t\t\t\t\t\t  <InputGroup.Addon>months</InputGroup.Addon>\n\t\t\t\t\t\t  </InputGroup>\n\t\t\t\t\t\t</FormGroup>\n\n\t\t\t\t\t  <FormGroup controlId=\"formLoanRate\" validationState={this.validateLoanRate(this.state.loanRate)}>\n\t\t\t\t\t\t  <ControlLabel>Annual Percentage Rate</ControlLabel>\n\t\t\t\t\t\t  <InputGroup>\n\t\t\t\t\t\t\t  <FormControl\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"loanRate\"\n\t\t\t\t\t\t\t\tvalue={this.state.loanRate}\n\t\t\t\t\t\t\t\tplaceholder=\"Enter rate\"\n\t\t\t\t\t\t\t\tonChange={this.handleStateChange}\n\t\t\t\t\t\t\t  />\n\t\t\t\t\t\t\t  <InputGroup.Addon>%</InputGroup.Addon>\n\t\t\t\t\t\t  </InputGroup>\n\t\t\t\t\t</FormGroup>\n\t</div>\n\t</Col>\n\t</Row>\n\t<div className=\"with-bottom-margin-10\">\n\t<Row>\n  <Col sm={6}  md={2}>\t\n\t\t\t\t\t<Button\n\t\t\t\t\t\t\tdisabled={!this.canBeSubmitted() || isLoading}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tonClick={!isLoading ? this.calculate : null}\n\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t> \n\t\t\t\t\t\t\t{isLoading ? 'Calculating...' : 'Calculate'}\n\t\t\t\t\t</Button>\n  </Col>\n  <Col sm={6}  md={2}>\t\n\t\t\t\t\t<Button\n\t\t\t\t\t\tblock\n\t\t\t\t\t\ttype=\"reset\"\n\t\t\t\t\t\tonClick={this.handleClearClick}> \n\t\t\t\t\t\t\tClear\n\t\t\t\t\t</Button>\n  </Col>\n  </Row>\n  </div>\n\n  <div className=\"with-bottom-margin-10\">\n\t<Row>\n\t  <Col sm={12}  md={4}>\n\t\t<Button \n\t\tblock\n\t\tdisabled> \n\t\t\tAmortization Table\n\t</Button>\n\t  </Col>\n\t</Row>\n  </div>\n\n\t<Row>\n\t<div>\n\t\t{tableData && tableData.length > 0 &&\n\t\t\tthis.renderTable(tableData)\n\t\t}\n\t</div>\n\t</Row>\n</Grid>\n\t\t\t\t   );\n\t\t\t\t\t \n\t}\n\t\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'raf/polyfill';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}